{"ast":null,"code":"var _jsxFileName = \"/Users/ivana/Desktop/WBS-Projekte/React/my-api-app/src/components/News.js\",\n    _s2 = $RefreshSig$();\n\nimport React from 'react';\nimport { useState, useEffect } from 'react'; //import Search from './components/Search';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst News = () => {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  const [articles, setArticles] = useState(null);\n\n  const searchBar = articles => {\n    _s();\n\n    const items = articles;\n    console.log(items);\n    useEffect(() => {\n      fetch(\"https://hn.algolia.com/api/v1/search?query\").then(response => response.json()).then(data => {\n        // console.log(data.hits);\n        setArticles(data.hits);\n      }).catch(error => alert('Error'));\n    }, []);\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Artikel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 10\n        }, this), articles ? articles.map(article => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: article.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: article.author\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 15\n          }, this)]\n        }, article.objectID, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 13\n        }, this)) : \"Loading.....\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 5\n      }, this)\n    }, void 0, false);\n  };\n\n  _s(searchBar, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n};\n\n_s2(News, \"RLzEfRFHB/GLS+UKF9nhYJpABXg=\");\n\n_c = News;\nexport default News;\n\nvar _c;\n\n$RefreshReg$(_c, \"News\");","map":{"version":3,"sources":["/Users/ivana/Desktop/WBS-Projekte/React/my-api-app/src/components/News.js"],"names":["React","useState","useEffect","News","articles","setArticles","searchBar","items","console","log","fetch","then","response","json","data","hits","catch","error","alert","map","article","title","author","objectID"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC,C,CACA;;;;;AAGC,MAAMC,IAAI,GAAG,MAAM;AAAA;;AAAA;;AAChB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BJ,QAAQ,CAAC,IAAD,CAAxC;;AAGA,QAAMK,SAAS,GAAIF,QAAD,IAAc;AAAA;;AAC9B,UAAMG,KAAK,GAAGH,QAAd;AACAI,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AAENL,IAAAA,SAAS,CAAC,MAAM;AACZQ,MAAAA,KAAK,CAAC,4CAAD,CAAL,CACCC,IADD,CACOC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EADpB,EAECF,IAFD,CAEOG,IAAD,IAAU;AACjB;AACCT,QAAAA,WAAW,CAACS,IAAI,CAACC,IAAN,CAAX;AACH,OALG,EAMCC,KAND,CAMQC,KAAD,IAAWC,KAAK,CAAC,OAAD,CANvB;AAOH,KARQ,EAQN,EARM,CAAT;AAYE,wBACE;AAAA,6BACA;AAAA,gCAEK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFL,EAGGd,QAAQ,GACLA,QAAQ,CAACe,GAAT,CAAcC,OAAD,iBACX;AAAA,kCACE;AAAA,sBAAKA,OAAO,CAACC;AAAb;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAA,sBAAID,OAAO,CAACE;AAAZ;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA,WAAUF,OAAO,CAACG,QAAlB;AAAA;AAAA;AAAA;AAAA,gBADF,CADK,GAOL,cAVN;AAAA;AAAA;AAAA;AAAA;AAAA;AADA,qBADF;AAgBD,GAhCG;;AAJgB,KAIVjB,SAJU;AAoClB,CApCD;;IAAMH,I;;KAAAA,I;AAqCP,eAAeA,IAAf","sourcesContent":["import React from 'react'\nimport { useState, useEffect } from 'react'\n//import Search from './components/Search';\n\n\n const News = () => {\n    const [articles, setArticles] = useState(null);\n\n\n    const searchBar = (articles) => {\n      const items = articles;\n      console.log(items)\n    \nuseEffect(() => {\n    fetch(\"https://hn.algolia.com/api/v1/search?query\")\n    .then((response) => response.json())\n    .then((data) => {\n   // console.log(data.hits);\n    setArticles(data.hits);\n})\n    .catch((error) => alert('Error'));\n}, []);\n\n\n\n  return (\n    <>\n    <div>\n    \n         <h1>Artikel</h1>\n      {articles\n        ? articles.map((article) => (\n            <div key={article.objectID}>\n              <h2>{article.title}</h2>\n              <p>{article.author}</p>\n            </div>\n          ))\n        : \"Loading.....\"}\n    </div>\n    </>\n  );\n}}\nexport default News"]},"metadata":{},"sourceType":"module"}