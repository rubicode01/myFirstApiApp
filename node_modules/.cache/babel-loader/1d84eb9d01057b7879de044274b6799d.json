{"ast":null,"code":"var _jsxFileName = \"/Users/ivana/Desktop/WBS-Projekte/React/my-api-app/src/components/Search.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState, useEffect } from 'react'; //import axios from 'axios';\n//import { Card, Input } from 'semantic-ui-react'\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Posts() {\n  _s();\n\n  const [APIData, setAPIData] = useState([]);\n  const [filteredResults, setFilteredResults] = useState([]);\n  const [searchInput, setSearchInput] = useState('');\n  useEffect(() => {\n    axios.get(`https://jsonplaceholder.typicode.com/users`).then(response => {\n      setAPIData(response.data);\n    });\n  }, []);\n\n  const searchItems = searchValue => {\n    setSearchInput(searchValue);\n\n    if (searchInput !== '') {\n      const filteredData = APIData.filter(item => {\n        return Object.values(item).join('').toLowerCase().includes(searchInput.toLowerCase());\n      });\n      setFilteredResults(filteredData);\n    } else {\n      setFilteredResults(APIData);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: 20\n    },\n    children: [/*#__PURE__*/_jsxDEV(Input, {\n      icon: \"search\",\n      placeholder: \"Search...\",\n      onChange: e => searchItems(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Card.Group, {\n      itemsPerRow: 3,\n      style: {\n        marginTop: 20\n      },\n      children: searchInput.length > 1 ? filteredResults.map(item => {\n        return /*#__PURE__*/_jsxDEV(Card, {\n          children: /*#__PURE__*/_jsxDEV(Card.Content, {\n            children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n              children: item.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(Card.Description, {\n              children: item.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 29\n        }, this);\n      }) : APIData.map(item => {\n        return /*#__PURE__*/_jsxDEV(Card, {\n          children: /*#__PURE__*/_jsxDEV(Card.Content, {\n            children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n              children: item.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(Card.Description, {\n              children: item.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 29\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Posts, \"+lsq1bFQGpxa7WWr74EhfO8escA=\");\n\n_c = Posts;\n\nvar _c;\n\n$RefreshReg$(_c, \"Posts\");","map":{"version":3,"sources":["/Users/ivana/Desktop/WBS-Projekte/React/my-api-app/src/components/Search.js"],"names":["React","useState","useEffect","Posts","APIData","setAPIData","filteredResults","setFilteredResults","searchInput","setSearchInput","axios","get","then","response","data","searchItems","searchValue","filteredData","filter","item","Object","values","join","toLowerCase","includes","padding","e","target","value","marginTop","length","map","name","email"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { useState, useEffect } from 'react';\n//import axios from 'axios';\n//import { Card, Input } from 'semantic-ui-react'\nexport default function Posts() {\n    const [APIData, setAPIData] = useState([])\n    const [filteredResults, setFilteredResults] = useState([]);\n    const [searchInput, setSearchInput] = useState('');\n    useEffect(() => {\n        axios.get(`https://jsonplaceholder.typicode.com/users`)\n            .then((response) => {\n                setAPIData(response.data);\n            })\n    }, [])\n\n    const searchItems = (searchValue) => {\n        setSearchInput(searchValue)\n        if (searchInput !== '') {\n            const filteredData = APIData.filter((item) => {\n                return Object.values(item).join('').toLowerCase().includes(searchInput.toLowerCase())\n            })\n            setFilteredResults(filteredData)\n        }\n        else{\n            setFilteredResults(APIData)\n        }\n    }\n\n    return (\n        <div style={{ padding: 20 }}>\n            <Input icon='search'\n                placeholder='Search...'\n                onChange={(e) => searchItems(e.target.value)}\n            />\n            <Card.Group itemsPerRow={3} style={{ marginTop: 20 }}>\n                {searchInput.length > 1 ? (\n                    filteredResults.map((item) => {\n                        return (\n                            <Card>\n                                <Card.Content>\n                                    <Card.Header>{item.name}</Card.Header>\n                                    <Card.Description>\n                                        {item.email}\n                                    </Card.Description>\n                                </Card.Content>\n                            </Card>\n                        )\n                    })\n                ) : (\n                    APIData.map((item) => {\n                        return (\n                            <Card>\n                                <Card.Content>\n                                    <Card.Header>{item.name}</Card.Header>\n                                    <Card.Description>\n                                        {item.email}\n                                    </Card.Description>\n                                </Card.Content>\n                            </Card>\n                        )\n                    })\n                )}\n            </Card.Group>\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}