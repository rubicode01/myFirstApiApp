{"ast":null,"code":"var _jsxFileName = \"/Users/ivana/Desktop/WBS-Projekte/React/my-api-app/src/components/Search.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nsearch = () => {\n  \"https://hn.algolia.com/api/v1/search?query\";\n  fetch(\"https://hn.algolia.com/api/v1/search?query\", {\n    method: \"GET\",\n    // *GET, POST, PUT, DELETE, etc.\n    mode: \"cors\",\n    // no-cors, cors, *same-origin\n    cache: \"no-cache\",\n    // *default, no-cache, reload, force-cache, only-if-cached\n    credentials: \"same-origin\",\n    // include, same-origin, *omit\n    headers: {\n      \"Access-Control-Allow-Origin\": \"*\",\n      \"Content-Type\": \"application/json; charset=utf-8\",\n      Authorization: \"Bearer /*my key*/\",\n      \"Access-Control-Allow-Headers\": \"accept\"\n    }\n  }).then(response => response.json()).then(json => this.setState({\n    items: json\n  }));\n};\n\nconst search = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 10\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n\nexport default search;","map":{"version":3,"sources":["/Users/ivana/Desktop/WBS-Projekte/React/my-api-app/src/components/Search.js"],"names":["React","search","fetch","method","mode","cache","credentials","headers","Authorization","then","response","json","setState","items"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAGAC,MAAM,GAAG,MAAM;AACT,8CAAD;AAEDC,EAAAA,KAAK,CAAC,4CAAD,EAA+C;AAClDC,IAAAA,MAAM,EAAE,KAD0C;AACnC;AACfC,IAAAA,IAAI,EAAE,MAF4C;AAEpC;AACdC,IAAAA,KAAK,EAAE,UAH2C;AAG/B;AACnBC,IAAAA,WAAW,EAAE,aAJqC;AAItB;AAC5BC,IAAAA,OAAO,EAAE;AACP,qCAA+B,GADxB;AAEP,sBAAgB,iCAFT;AAGPC,MAAAA,aAAa,EAAE,mBAHR;AAIP,sCAAgC;AAJzB;AALyC,GAA/C,CAAL,CAaGC,IAbH,CAaQC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EAbpB,EAcGF,IAdH,CAcQE,IAAI,IAAI,KAAKC,QAAL,CAAc;AAACC,IAAAA,KAAK,EAACF;AAAP,GAAd,CAdhB;AAeD,CAlBH;;AAoBA,MAAMV,MAAM,GAAG,MAAM;AACnB,sBACE;AAAA,2BAAK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAL;AAAA;AAAA;AAAA;AAAA,UADF;AAGD,CAJD;;AAMA,eAAeA,MAAf","sourcesContent":["import React from 'react'\n\n\nsearch = () => {\n     (\"https://hn.algolia.com/api/v1/search?query\");\n\n    fetch(\"https://hn.algolia.com/api/v1/search?query\", {\n      method: \"GET\", // *GET, POST, PUT, DELETE, etc.\n      mode: \"cors\", // no-cors, cors, *same-origin\n      cache: \"no-cache\", // *default, no-cache, reload, force-cache, only-if-cached\n      credentials: \"same-origin\", // include, same-origin, *omit\n      headers: {\n        \"Access-Control-Allow-Origin\": \"*\",\n        \"Content-Type\": \"application/json; charset=utf-8\",\n        Authorization: \"Bearer /*my key*/\",\n        \"Access-Control-Allow-Headers\": \"accept\"\n      }\n    \n    })\n      .then(response => response.json())\n      .then(json => this.setState({items:json}));\n  };\n\nconst search = () => {\n  return (\n    <div><p>Search</p></div>\n  )\n}\n\nexport default search"]},"metadata":{},"sourceType":"module"}